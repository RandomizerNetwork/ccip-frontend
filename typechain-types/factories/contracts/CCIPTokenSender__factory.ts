/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  CCIPTokenSender,
  CCIPTokenSenderInterface,
} from "../../contracts/CCIPTokenSender";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "GasShouldBeZero",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidToken",
    type: "error",
  },
  {
    inputs: [],
    name: "NoDataAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "ccipRouter",
    outputs: [
      {
        internalType: "contract IRouterClient",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "destinationChainSelector",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "receiver",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "tokenAmounts",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "feeToken",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "extraArgs",
            type: "bytes",
          },
        ],
        internalType: "struct Client.EVM2AnyMessage",
        name: "message",
        type: "tuple",
      },
    ],
    name: "ccipSend",
    outputs: [
      {
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "ccipWhitelistedToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "destinationChainSelector",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "receiver",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "tokenAmounts",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "feeToken",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "extraArgs",
            type: "bytes",
          },
        ],
        internalType: "struct Client.EVM2AnyMessage",
        name: "message",
        type: "tuple",
      },
    ],
    name: "getFee",
    outputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "destinationChainSelector",
        type: "uint64",
      },
    ],
    name: "getSupportedTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "supportedTokens",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620015b8380380620015b88339810160408190526200003491620000df565b6001600160a01b03828116608081905290821660a081905260405163095ea7b360e01b8152600481019290925260001960248301529063095ea7b3906044016020604051808303816000875af115801562000093573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000b9919062000117565b50505062000142565b80516001600160a01b0381168114620000da57600080fd5b919050565b60008060408385031215620000f357600080fd5b620000fe83620000c2565b91506200010e60208401620000c2565b90509250929050565b6000602082840312156200012a57600080fd5b815180151581146200013b57600080fd5b9392505050565b60805160a051611427620001916000396000818161011001526106fe0152600081816071015281816101a70152818161029e015281816103990152818161056f015261062601526114276000f3fe60806040526004361061005a5760003560e01c806396f4e9f91161004357806396f4e9f9146100eb578063d8765a64146100fe578063fbca3b741461013257600080fd5b80630de229841461005f57806320487ded146100bd575b600080fd5b34801561006b57600080fd5b506100937f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b3480156100c957600080fd5b506100dd6100d8366004610cd4565b61015f565b6040519081526020016100b4565b6100dd6100f9366004610cd4565b610226565b34801561010a57600080fd5b506100937f000000000000000000000000000000000000000000000000000000000000000081565b34801561013e57600080fd5b5061015261014d366004610d29565b6105eb565b6040516100b49190610d44565b600061016a826106ce565b6040517f20487ded00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906320487ded906101de9086908690600401610edf565b602060405180830381865afa1580156101fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021f9190611028565b9392505050565b6000610231826106ce565b60006102436080840160608501611041565b73ffffffffffffffffffffffffffffffffffffffff161461041a576040517f20487ded00000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906320487ded906102d59087908790600401610edf565b602060405180830381865afa1580156102f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103169190611028565b905061034c33308361032e6080880160608901611041565b73ffffffffffffffffffffffffffffffffffffffff169291906108f7565b61035c6080840160608501611041565b6040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116600483015260248201849052919091169063095ea7b3906044016020604051808303816000875af11580156103f3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610417919061105e565b50505b6104276040830183611080565b6000818110610438576104386110e8565b61044e9260206040909202019081019150611041565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd33306104786040870187611080565b6000818110610489576104896110e8565b6040805160e088901b7fffffffff0000000000000000000000000000000000000000000000000000000016815273ffffffffffffffffffffffffffffffffffffffff96871660048201529490951660248501529093020160200135604482015260640190506020604051808303816000875af115801561050d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610531919061105e565b506040517f96f4e9f900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906396f4e9f99034906105a89087908790600401610edf565b60206040518083038185885af11580156105c6573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061021f9190611028565b6040517ffbca3b7400000000000000000000000000000000000000000000000000000000815267ffffffffffffffff821660048201526060907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063fbca3b7490602401600060405180830381865afa158015610682573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526106c89190810190611195565b92915050565b6106db6040820182611080565b9050600114158061076b575073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001661072b6040830183611080565b600081811061073c5761073c6110e8565b6107529260206040909202019081019150611041565b73ffffffffffffffffffffffffffffffffffffffff1614155b156107a2576040517fc1ab6dc100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006107b16020830183611247565b905011156107eb576040517f27eb6f2d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107f86080820182611247565b1590508061085d57507f97a657c90000000000000000000000000000000000000000000000000000000061082f6080830183611247565b610838916112ac565b7fffffffff000000000000000000000000000000000000000000000000000000001614155b15610894576040517f6633e5f600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108a16080820182611247565b6108af9160049082906112f4565b8101906108bc919061131e565b51156108f4576040517f6633e5f600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd0000000000000000000000000000000000000000000000000000000017905261098c908590610992565b50505050565b60006109f4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610aa89092919063ffffffff16565b805190915015610aa35780806020019051810190610a12919061105e565b610aa3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b505050565b6060610ab78484600085610abf565b949350505050565b606082471015610b51576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610a9a565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610b7a9190611384565b60006040518083038185875af1925050503d8060008114610bb7576040519150601f19603f3d011682016040523d82523d6000602084013e610bbc565b606091505b5091509150610bcd87838387610bd8565b979650505050505050565b60608315610c6e578251600003610c675773ffffffffffffffffffffffffffffffffffffffff85163b610c67576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610a9a565b5081610ab7565b610ab78383815115610c835781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9a91906113a0565b803567ffffffffffffffff81168114610ccf57600080fd5b919050565b60008060408385031215610ce757600080fd5b610cf083610cb7565b9150602083013567ffffffffffffffff811115610d0c57600080fd5b830160a08186031215610d1e57600080fd5b809150509250929050565b600060208284031215610d3b57600080fd5b61021f82610cb7565b6020808252825182820181905260009190848201906040850190845b81811015610d9257835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101610d60565b50909695505050505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112610dd357600080fd5b830160208101925035905067ffffffffffffffff811115610df357600080fd5b803603821315610e0257600080fd5b9250929050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b73ffffffffffffffffffffffffffffffffffffffff811681146108f457600080fd5b8035610ccf81610e52565b8183526000602080850194508260005b85811015610ed4578135610ea281610e52565b73ffffffffffffffffffffffffffffffffffffffff168752818301358388015260409687019690910190600101610e8f565b509495945050505050565b600067ffffffffffffffff808516835260406020840152610f008485610d9e565b60a06040860152610f1560e086018284610e09565b915050610f256020860186610d9e565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc080878503016060880152610f5b848385610e09565b9350604088013592507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1883603018312610f9457600080fd5b60209288019283019235915084821115610fad57600080fd5b8160061b3603831315610fbf57600080fd5b80878503016080880152610fd4848385610e7f565b9450610fe260608901610e74565b73ffffffffffffffffffffffffffffffffffffffff811660a0890152935061100d6080890189610d9e565b94509250808786030160c08801525050610bcd838383610e09565b60006020828403121561103a57600080fd5b5051919050565b60006020828403121561105357600080fd5b813561021f81610e52565b60006020828403121561107057600080fd5b8151801515811461021f57600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126110b557600080fd5b83018035915067ffffffffffffffff8211156110d057600080fd5b6020019150600681901b3603821315610e0257600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561118d5761118d611117565b604052919050565b600060208083850312156111a857600080fd5b825167ffffffffffffffff808211156111c057600080fd5b818501915085601f8301126111d457600080fd5b8151818111156111e6576111e6611117565b8060051b91506111f7848301611146565b818152918301840191848101908884111561121157600080fd5b938501935b8385101561123b578451925061122b83610e52565b8282529385019390850190611216565b98975050505050505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261127c57600080fd5b83018035915067ffffffffffffffff82111561129757600080fd5b602001915036819003821315610e0257600080fd5b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156112ec5780818660040360031b1b83161692505b505092915050565b6000808585111561130457600080fd5b8386111561131157600080fd5b5050820193919092039150565b60006020828403121561133057600080fd5b6040516020810181811067ffffffffffffffff8211171561135357611353611117565b6040529135825250919050565b60005b8381101561137b578181015183820152602001611363565b50506000910152565b60008251611396818460208701611360565b9190910192915050565b60208152600082518060208401526113bf816040850160208701611360565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fea2646970667358221220cb259eca3a72197a99ec39a1a1acc75128ce57ccde11e0489f0a888c8751622b64736f6c63430008110033";

type CCIPTokenSenderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CCIPTokenSenderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CCIPTokenSender__factory extends ContractFactory {
  constructor(...args: CCIPTokenSenderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _router: AddressLike,
    _token: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_router, _token, overrides || {});
  }
  override deploy(
    _router: AddressLike,
    _token: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_router, _token, overrides || {}) as Promise<
      CCIPTokenSender & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CCIPTokenSender__factory {
    return super.connect(runner) as CCIPTokenSender__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CCIPTokenSenderInterface {
    return new Interface(_abi) as CCIPTokenSenderInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CCIPTokenSender {
    return new Contract(address, _abi, runner) as unknown as CCIPTokenSender;
  }
}
